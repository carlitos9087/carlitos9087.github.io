// Anim Morph
// var morphing1 = anime({
//   targets: '.morph',
//   points: [
//     // Pontos iniciais da primeira SVG e pontos finais da segunda SVG
//     { value: "112.74 38.93, 182.32 62.58, 286.70 98.07, 356.29 121.73, 425.87 145.39, 460.67 157.22,  426.51 156.065, 392.35 154.91, 358.19 153.75, 289.88 151.44, 187.40 147.9, 119.09 145.67112.74 38.93, 182.32 62.58, 286.70 98.07, 356.29 121.73, 425.87 145.39, 460.67 157.22,  426.51 156.065, 392.35 154.91, 358.19 153.75, 289.88 151.44, 187.40 147.9, 119.09 145.67" },
//     { value: '107.64 104.42, 219.43 59.06, 279.35 120.03, 338.55  104.57, 365.59  144.74, 387.78  140.75, 364.89	167.21, 329.89	133.26, 259.82	164.48, 207.11	122.55, 160 175.75' }
//   ],
//   easing: 'easeInOutQuad',
//   duration: 3000,
//   loop: false
// });

// var morphing2 = anime({
//   targets: '.morph2',
//   points: [
//     { value: "0 100.44, 78.24 57.76, 212.09 92.57, 326.81 122.4, 441.54 152.24, 460.67 157.22, 437.63 154.38, 391.56 148.70, 345.50 143.02, 230.33 128.82, 115.16 114.63" },
//     { value: '107.64  104.42, 175.98	48.14, 220.2 57.18, 289.21	109.44, 338.55	104.57, 371.28	146.96, 389.71	141.27, 371.95	159.69, 329.07	130.55' }
//   ],
//   easing: 'easeInOutQuad',
//   duration: 3000,
//   loop: false
// });

// var morphing3 = anime({
//   targets: '.morph3',
//   points: [
//     { value: "0 100.44, 78.24 57.76, 212.09 92.57, 326.81 122.4, 384.18 137.32,441.54 152.24,  204.485 148.55, 272.80 150.86, 341.11 153.17, 409.43 155.48, 443.59 156.64,  460.67 157.22" },

//     { value: "41.075	182.62, 80.94	125.67, 194.84	76.09, 274.23	130.03, 338.55	104.57, 365.69	145.44, 387.8	140.75, 367.7	154.82, 338.89	114.95, 265.19	152.14, 208.24	102.22" }
//   ],
//   easing: 'easeInOutQuad',
//   duration: 3000,
//   loop: false
//  });


// var morphing = anime({
//   targets: '.morph',
// 	points: [
//         //Debut
//         { value: '112.74 38.93,  182.32 62.58, 286.70 98.07,  356.29 121.73,  425.87 145.39,  460.67 157.22,  426.51 156.065, 392.35  154.91, 358.19  153.75, 289.88 151.44, 187.40 147.9, 119.09 145.67' },
//         //Fin
//         { value: '460.67 157.22 112.75 38.96 119.11 145.71' },
// 	],
//   easing: 'easeInOutQuad',
//   duration: 3000,
//   loop: true
// });

// var morphing = anime({
//   targets: '.morph2',
// 	points: [
//         //Debut
//         { value: '108.04 24.86 168.78 0 460.67 125.29' },
//         //Fin
//         { value: '112.75 38.96 184.146 0 460.67 157.29' },
// 	],
//   easing: 'easeInOutQuad',
//   duration: 3000,
//   loop: true
// });

// var morphing = anime({
//   targets: '.morph3',
// 	points: [
//         //Debut
//         { value: '75.31 38.13 460.67 125.29 0 68.51' },
//         //Fin
//         { value: '78.25 57.80 460.67 157.29 0 100.51' },
// 	],
//   easing: 'easeInOutQuad',
//   duration: 3000,
//   loop: true
// });









// /**
// 215.28 208.84,
// 438.86 118.12, 
// 558.7 240.06, 
// 677.11 209.14,
// 731.18 289.48,
// 775.56 281.5,
// 729.78 334.42,
// 659.78 266.52,
// 519.64 328.96,
// 414.22 245.1,
// 320 351.5

// 215.28 208.84,
// 438.86 118.12,
// 558.7 240.06,
// 677.11 209.14,
// 731.18 289.48,
// 775.56 281.5,
// 729.78 334.42,
// 659.78 266.52,
// 519.64 328.96,
// 414.22 245.1,
// 320 351.5
// //////////////-------------
// 107.64  104.42
// 219.43  59.06
// 279.35  120.03
// 338.55  104.57
// 365.59  144.74
// 387.78  140.75
// 364.89	167.21
// 329.89	133.26
// 259.82	164.48
// 207.11	122.55
// 160 175.75

// 107.64  104.42, 219.43  59.06, 279.35  120.03, 338.55  104.57, 365.59  144.74, 387.78  140.75, 364.89	167.21, 329.89	133.26, 259.82	164.48, 207.11	122.55, 160 175.75

// //////////////////
// 215.28 208.84
// 351.96 96.28
// 440.4 114.37
// 578.42 218.89
// 677.11 209.14
// 742.57 293.93
// 779.42 282.54
// 743.91 319.39
// 658.15 261.1

// 107.64  104.42, 175.98	48.14, 220.2 57.18, 289.21	109.44, 338.55	104.57, 371.28	146.96, 389.71	141.27, 371.95	159.69, 329.07	130.55, 
// ////////////////////
// 82.15 365.25
// 161.88 251.35
// 389.68 152.19
// 548.47 260.06
// 677.11 209.14
// 731.38 290.88
// 775.6 281.5
// 735.4 309.64
// 677.78 229.91
// 530.38 304.28
// 416.48 204.45

// 41.075	182.62, 80.94	125.67, 194.84	76.09, 274.23	130.03, 338.55	104.57, 365.69	145.44, 387.8	140.75, 367.7	154.82, 338.89	114.95, 265.19	152.14, 208.24	102.22, 
//  */

var morphing1 = anime({
  targets: '.morph',
  points: [
    // Pontos iniciais da primeira SVG e pontos finais da segunda SVG
    { value: "112.74 38.93,  182.32 62.58, 286.70 98.07,  356.29 121.73,  425.87 145.39,  460.67 157.22,  426.51 156.065, 392.35  154.91, 358.19  153.75, 289.88 151.44, 187.40 147.9, 119.09 145.67" },
    { value: '107.64 104.42, 219.43 59.06, 279.35 120.03, 338.55  104.57, 365.59  144.74, 387.78  140.75, 364.89	167.21, 329.89	133.26, 259.82	164.48, 207.11	122.55, 160 175.75' }
  ],
  easing: 'easeInOutQuad',
  duration: 3000,
  loop: false
});

var morphing2 = anime({
  targets: '.morph2',
  points: [
    { value: "112.74 38.93, 184.11 0,   239.42 31.44,  322.39 78.61,  405.35 125.77,  433.01 141.49,  460.67 157.22, 425.87 145.39, 356.29 121.73, 286.70 98.07, 182.32 62.58" },
    { value: '107.64  104.42, 175.98	48.14, 220.2 57.18, 289.21	109.44, 338.55	104.57, 371.28	146.96, 389.71	141.27, 371.95	159.69, 329.07	130.55' }
  ],
  easing: 'easeInOutQuad',
  duration: 3000,
  loop: false
});

var morphing3 = anime({
  targets: '.morph3',
  points: [
    { value: "0 100.44, 78.24 57.76, 212.09 92.57, 326.81 122.4, 384.18 137.32,441.54 152.24,  204.485 148.55, 272.80 150.86, 341.11 153.17, 409.43 155.48, 443.59 156.64,  460.67 157.22" },

    { value: "41.075	182.62, 80.94	125.67, 194.84	76.09, 274.23	130.03, 338.55	104.57, 365.69	145.44, 387.8	140.75, 367.7	154.82, 338.89	114.95, 265.19	152.14, 208.24	102.22" }
  ],
  easing: 'easeInOutQuad',
  duration: 3000,
  loop: false
});
  function interpolatePoints(p1, p2, t) {
    return {
        x: (1 - t) * p1.x + t * p2.x,
        y: (1 - t) * p1.y + t * p2.y
    };
  }



// // P1 (112.74, 38.93) and P2 (184.11, 0)
// const p1 = { x: 119.09 ,y:145.67  };
// const p2 = { x: 460.67, y: 157.22 };

// // Ponto intermedi√°rio no meio do caminho (t = 0.5)
// console.log(interpolatePoints(p1, p2, 0.25)); 
// console.log(interpolatePoints(p1, p2, 0.45)); 
// console.log(interpolatePoints(p1, p2, 0.65)); 
// console.log(interpolatePoints(p1, p2, 0.85)); 
// console.log(interpolatePoints(p1, p2, 0.95)); 




 